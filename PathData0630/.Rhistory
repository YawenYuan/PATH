load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1, imp2, imp3, imp4, imp5)
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
weightdata <- list(imp1, imp2, imp3, imp4, imp5)
weightdata <- list(imp1[1:100,],
imp2[1:100,],
imp3[1:100,],
imp4[1:100,],
imp5[1:100,])
dim(weightdata[[1]])
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub_data1 <- lapply(weightdata, strat_sp, prob = 0.9)
sub_data2 <- list()
for(i in seq_along(sub_data1)){
sub_data2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub_data1[[i]]$PERSONID)
}
library(tidyverse)
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub_data1 <- lapply(weightdata, strat_sp, prob = 0.9)
sub_data2 <- list()
for(i in seq_along(sub_data1)){
sub_data2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub_data1[[i]]$PERSONID)
}
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1[1:100,],
imp2[1:100,],
imp3[1:100,],
imp4[1:100,],
imp5[1:100,])
weightdata <- list()
for (i in seq_along(impdata)){
dum_data[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
library(fastDummies)
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1[1:100,],
imp2[1:100,],
imp3[1:100,],
imp4[1:100,],
imp5[1:100,])
weightdata <- list()
for (i in seq_along(impdata)){
dum_data[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
weightdata <- list()
for (i in seq_along(impdata)){
weightdata[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub_data1 <- lapply(weightdata, strat_sp, prob = 0.9)
sub_data2 <- list()
for(i in seq_along(sub_data1)){
sub_data2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub_data1[[i]]$PERSONID)
}
library(tidyverse)
library(fastDummies)
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1[1:100,],
imp2[1:100,],
imp3[1:100,],
imp4[1:100,],
imp5[1:100,])
dum_data <- list()
for (i in seq_along(impdata)){
dum_data[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
get_svydata <- function(data){
# library(srvyr)
# library(survey)
load("dat.rda")
load("36498-3202-Data.rda") # 3202: Single wave weights
dat1 <- cbind(dat$PERSONID, data) %>% rename(PERSONID =`dat$PERSONID`)
w3_weight <- da36498.3202 %>% dplyr::select(PERSONID, contains("SWGT"))
dat_out <- merge(dat1, w3_weight, by = "PERSONID") # combine weights columns DONE
# design_dat <- svrepdesign(id = ~PERSONID,
#                           weights = ~R03_Y_SWGT,
#                           repweights = "R03_Y_SWGT[0-9]+",
#                           type = "Fay",rho = 0.3, data = dat_out)
return(dat_out)
}
# apply weights in dummy impdata
weightdata <- list()
# weightdata <- lapply(orig_data, function(unit){return(get_svydata(unit)$variables)})
weightdata <- lapply(dum_data, get_svydata)
library(tidyverse)
library(fastDummies)
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1, imp2,imp3,imp4,imp5)
dum_data <- list()
for (i in seq_along(impdata)){
dum_data[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
get_svydata <- function(data){
# library(srvyr)
# library(survey)
load("dat.rda")
load("36498-3202-Data.rda") # 3202: Single wave weights
dat1 <- cbind(dat$PERSONID, data) %>% rename(PERSONID =`dat$PERSONID`)
w3_weight <- da36498.3202 %>% dplyr::select(PERSONID, contains("SWGT"))
dat_out <- merge(dat1, w3_weight, by = "PERSONID") # combine weights columns DONE
# design_dat <- svrepdesign(id = ~PERSONID,
#                           weights = ~R03_Y_SWGT,
#                           repweights = "R03_Y_SWGT[0-9]+",
#                           type = "Fay",rho = 0.3, data = dat_out)
return(dat_out)
}
# apply weights in dummy impdata
weightdata <- list()
# weightdata <- lapply(orig_data, function(unit){return(get_svydata(unit)$variables)})
weightdata <- lapply(dum_data, get_svydata)
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub_data1 <- lapply(weightdata, strat_sp, prob = 0.99)
sub_data2 <- list()
for(i in seq_along(sub_data1)){
sub_data2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub_data1[[i]]$PERSONID)
}
sub_data2[[1]]$PERSONID
# Sampling data with 70% outcome =1 / 70% outcome = 0
dat_out1 <- list()
dat_out0 <- list()
sample_out1_1 <- list()
sample_out1_2 <- list()
sample_out0_1 <- list()
sample_out0_2 <- list()
sub_data1 <- list()
sub_data2 <- list()
for (i in 1:5){
dat_out1[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 1)
dat_out0[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 0)
idx_1 <- sample(nrow(dat_out1[[i]]), floor(0.99*nrow(dat_out1[[i]]))) # use same part of data do selection and estimates
idx_0 <- sample(nrow(dat_out0[[i]]), floor(0.99*nrow(dat_out0[[i]])))
sample_out1_1[[i]] <- dat_out1[[i]][idx_1,]
sample_out1_2[[i]] <- dat_out1[[i]][-idx_1,]
sample_out0_1[[i]] <- dat_out0[[i]][idx_0,]
sample_out0_2[[i]] <- dat_out0[[i]][-idx_0,]
sub_data1[[i]] <- rbind(sample_out1_1[[i]], sample_out0_1[[i]])
sub_data2[[i]] <- rbind(sample_out1_2[[i]], sample_out0_2[[i]])
}
sub_data2[[1]]$PERSONID
table(sub_data2[[1]]$outcome_1)
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub1 <- lapply(weightdata, strat_sp, prob = 0.99)
sub2 <- list()
for(i in seq_along(sub1)){
sub2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub_data1[[i]]$PERSONID)
}
table(sub2[[1]]$outcome_1)
table(sub_data2[[1]]$ecig_1)
table(sub2[[1]]$ecig_1)
table(sub_data2[[2]]$ecig_1)
table(sub2[[2]]$ecig_1)
sub_data2[[1]]$PERSONID
sub2[[1]]$PERSONID
sort(sub2[[1]]$PERSONID)
sort(sub_data2[[1]]$PERSONID)
library(tidyverse)
library(fastDummies)
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1, imp2,imp3,imp4,imp5)
dum_data <- list()
for (i in seq_along(impdata)){
dum_data[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
get_svydata <- function(data){
# library(srvyr)
# library(survey)
load("dat.rda")
load("36498-3202-Data.rda") # 3202: Single wave weights
dat1 <- cbind(dat$PERSONID, data) %>% rename(PERSONID =`dat$PERSONID`)
w3_weight <- da36498.3202 %>% dplyr::select(PERSONID, contains("SWGT"))
dat_out <- merge(dat1, w3_weight, by = "PERSONID") # combine weights columns DONE
# design_dat <- svrepdesign(id = ~PERSONID,
#                           weights = ~R03_Y_SWGT,
#                           repweights = "R03_Y_SWGT[0-9]+",
#                           type = "Fay",rho = 0.3, data = dat_out)
return(dat_out)
}
# apply weights in dummy impdata
weightdata <- list()
# weightdata <- lapply(orig_data, function(unit){return(get_svydata(unit)$variables)})
weightdata <- lapply(dum_data, get_svydata)
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub1 <- lapply(weightdata, strat_sp, prob = 0.99)
sub2 <- list()
for(i in seq_along(sub1)){
sub2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub_data1[[i]]$PERSONID)
}
# Sampling data with 70% outcome =1 / 70% outcome = 0
dat_out1 <- list()
dat_out0 <- list()
sample_out1_1 <- list()
sample_out1_2 <- list()
sample_out0_1 <- list()
sample_out0_2 <- list()
sub_data1 <- list()
sub_data2 <- list()
for (i in 1:5){
dat_out1[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 1)
dat_out0[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 0)
idx_1 <- sample(nrow(dat_out1[[i]]), floor(0.99*nrow(dat_out1[[i]]))) # use same part of data do selection and estimates
idx_0 <- sample(nrow(dat_out0[[i]]), floor(0.99*nrow(dat_out0[[i]])))
sample_out1_1[[i]] <- dat_out1[[i]][idx_1,]
sample_out1_2[[i]] <- dat_out1[[i]][-idx_1,]
sample_out0_1[[i]] <- dat_out0[[i]][idx_0,]
sample_out0_2[[i]] <- dat_out0[[i]][-idx_0,]
sub_data1[[i]] <- rbind(sample_out1_1[[i]], sample_out0_1[[i]])
sub_data2[[i]] <- rbind(sample_out1_2[[i]], sample_out0_2[[i]])
}
sort(sub2[[1]]$PERSONID
)
library(tidyverse)
library(fastDummies)
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1, imp2,imp3,imp4,imp5)
dum_data <- list()
for (i in seq_along(impdata)){
dum_data[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
get_svydata <- function(data){
# library(srvyr)
# library(survey)
load("dat.rda")
load("36498-3202-Data.rda") # 3202: Single wave weights
dat1 <- cbind(dat$PERSONID, data) %>% rename(PERSONID =`dat$PERSONID`)
w3_weight <- da36498.3202 %>% dplyr::select(PERSONID, contains("SWGT"))
dat_out <- merge(dat1, w3_weight, by = "PERSONID") # combine weights columns DONE
# design_dat <- svrepdesign(id = ~PERSONID,
#                           weights = ~R03_Y_SWGT,
#                           repweights = "R03_Y_SWGT[0-9]+",
#                           type = "Fay",rho = 0.3, data = dat_out)
return(dat_out)
}
# apply weights in dummy impdata
weightdata <- list()
# weightdata <- lapply(orig_data, function(unit){return(get_svydata(unit)$variables)})
weightdata <- lapply(dum_data, get_svydata)
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub1 <- lapply(weightdata, strat_sp, prob = 0.99)
sub2 <- list()
for(i in seq_along(sub1)){
sub2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub1[[i]]$PERSONID)
}
# Sampling data with 70% outcome =1 / 70% outcome = 0
dat_out1 <- list()
dat_out0 <- list()
sample_out1_1 <- list()
sample_out1_2 <- list()
sample_out0_1 <- list()
sample_out0_2 <- list()
sub_data1 <- list()
sub_data2 <- list()
for (i in 1:5){
dat_out1[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 1)
dat_out0[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 0)
idx_1 <- sample(nrow(dat_out1[[i]]), floor(0.99*nrow(dat_out1[[i]]))) # use same part of data do selection and estimates
idx_0 <- sample(nrow(dat_out0[[i]]), floor(0.99*nrow(dat_out0[[i]])))
sample_out1_1[[i]] <- dat_out1[[i]][idx_1,]
sample_out1_2[[i]] <- dat_out1[[i]][-idx_1,]
sample_out0_1[[i]] <- dat_out0[[i]][idx_0,]
sample_out0_2[[i]] <- dat_out0[[i]][-idx_0,]
sub_data1[[i]] <- rbind(sample_out1_1[[i]], sample_out0_1[[i]])
sub_data2[[i]] <- rbind(sample_out1_2[[i]], sample_out0_2[[i]])
}
sort(sub2[[1]]$PERSONID)
sort(sub_data2[[1]]$PERSONID)
table(sub2[[1]]$ecig_1)
table(sub_data2[[1]]$ecig_1)
table(sub_data2[[1]]$outcome_1)
table(sub2[[1]]$outcome_1)
library(tidyverse)
library(fastDummies)
set.seed(1)
setwd("/Users/yawenyuan/Desktop/PathData0630")
load("imp1.rda")
load("imp2.rda")
load("imp3.rda")
load("imp4.rda")
load("imp5.rda")
impdata <- list(imp1, imp2,imp3,imp4,imp5)
dum_data <- list()
for (i in seq_along(impdata)){
dum_data[[i]] <- dummy_cols(impdata[[i]],
remove_first_dummy = T,
remove_selected_columns = T) %>%
dplyr::select(everything())
}
get_svydata <- function(data){
# library(srvyr)
# library(survey)
load("dat.rda")
load("36498-3202-Data.rda") # 3202: Single wave weights
dat1 <- cbind(dat$PERSONID, data) %>% rename(PERSONID =`dat$PERSONID`)
w3_weight <- da36498.3202 %>% dplyr::select(PERSONID, contains("SWGT"))
dat_out <- merge(dat1, w3_weight, by = "PERSONID") # combine weights columns DONE
# design_dat <- svrepdesign(id = ~PERSONID,
#                           weights = ~R03_Y_SWGT,
#                           repweights = "R03_Y_SWGT[0-9]+",
#                           type = "Fay",rho = 0.3, data = dat_out)
return(dat_out)
}
# apply weights in dummy impdata
weightdata <- list()
# weightdata <- lapply(orig_data, function(unit){return(get_svydata(unit)$variables)})
weightdata <- lapply(dum_data, get_svydata)
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub1 <- lapply(weightdata, strat_sp, prob = 0.99)
sub2 <- list()
for(i in seq_along(sub1)){
sub2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub1[[i]]$PERSONID)
}
# Sampling data with 70% outcome =1 / 70% outcome = 0
dat_out1 <- list()
dat_out0 <- list()
sample_out1_1 <- list()
sample_out1_2 <- list()
sample_out0_1 <- list()
sample_out0_2 <- list()
sub_data1 <- list()
sub_data2 <- list()
for (i in 1:5){
dat_out1[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 1)
dat_out0[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 0)
idx_1 <- sample(nrow(dat_out1[[i]]), floor(0.99*nrow(dat_out1[[i]]))) # use same part of data do selection and estimates
idx_0 <- sample(nrow(dat_out0[[i]]), floor(0.99*nrow(dat_out0[[i]])))
sample_out1_1[[i]] <- dat_out1[[i]][idx_1,]
sample_out1_2[[i]] <- dat_out1[[i]][-idx_1,]
sample_out0_1[[i]] <- dat_out0[[i]][idx_0,]
sample_out0_2[[i]] <- dat_out0[[i]][-idx_0,]
sub_data1[[i]] <- rbind(sample_out1_1[[i]], sample_out0_1[[i]])
sub_data2[[i]] <- rbind(sample_out1_2[[i]], sample_out0_2[[i]])
}
sort(sub2[[1]]$PERSONID)
sort(sub_data2[[1]]$PERSONID)
View(imp2)
# dplyr sampling
strat_sp <- function(x, prob = 0.9){
st <- x %>%
group_by(outcome_1) %>%
sample_frac(size = prob) %>%
ungroup()
return(st)
}
sub1 <- lapply(weightdata, strat_sp, prob = 0.80)
sub2 <- list()
for(i in seq_along(sub1)){
sub2[[i]] <- weightdata[[i]] %>%
filter(!PERSONID %in% sub1[[i]]$PERSONID)
}
# Sampling data with 70% outcome =1 / 70% outcome = 0
dat_out1 <- list()
dat_out0 <- list()
sample_out1_1 <- list()
sample_out1_2 <- list()
sample_out0_1 <- list()
sample_out0_2 <- list()
sub_data1 <- list()
sub_data2 <- list()
for (i in 1:5){
dat_out1[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 1)
dat_out0[[i]] <- weightdata[[i]] %>%
filter(outcome_1 == 0)
idx_1 <- sample(nrow(dat_out1[[i]]), floor(0.80*nrow(dat_out1[[i]]))) # use same part of data do selection and estimates
idx_0 <- sample(nrow(dat_out0[[i]]), floor(0.80*nrow(dat_out0[[i]])))
sample_out1_1[[i]] <- dat_out1[[i]][idx_1,]
sample_out1_2[[i]] <- dat_out1[[i]][-idx_1,]
sample_out0_1[[i]] <- dat_out0[[i]][idx_0,]
sample_out0_2[[i]] <- dat_out0[[i]][-idx_0,]
sub_data1[[i]] <- rbind(sample_out1_1[[i]], sample_out0_1[[i]])
sub_data2[[i]] <- rbind(sample_out1_2[[i]], sample_out0_2[[i]])
}
table(sub_data2[[1]]$outcome_1)
table(sub2[[1]]$outcome_1)
table(sub_data2[[1]]$ecig_1)
table(sub2[[1]]$ecig_1)
table(weightdata[[1]]$ecig_1)
prop.table(table(weightdata[[1]]$ecig_1)
)
prop.table(table(weightdata[[1]]$outcome_1))
prop.table(table(weightdata[[1]]$ecig_1))
prop.table(table(sub2[[1]]$ecig_1))
prop.table(table(sub_data2[[1]]$ecig_1))
